{"version":3,"sources":["components/Todoform.js","components/Todo.js","components/Todolist.js","App.js","index.js"],"names":["Todoform","props","useState","edit","value","input","Setinput","inputfocus","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","Completetodo","removetodo","updatetodo","setedit","map","todo","index","isComplete","onClick","Todolist","setTodos","newtodos","completetodo","updatedtodos","iscomplete","removeArr","filter","todoid","newvalue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA8BeA,MA5Bf,SAAkBC,GACd,MAAwBC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAjE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MACxBC,qBAAU,WAAMF,EAAWG,QAAQC,WACnC,IAAMC,EAAc,SAAAC,GAChBP,EAASO,EAAEC,OAAOV,QAYtB,OACI,sBAAMW,UAAU,YAAYC,SAXZ,SAAAH,GAChBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,UACnBC,KAAKjB,IAGTC,EAAS,KAGT,SACKL,EAAME,KAAQ,yCAAG,uBAAOoB,KAAK,OAAOC,YAAY,mBAAmBpB,MAAOC,EAAOoB,KAAK,OAAOV,UAAU,kBAAkBW,SAAUd,EAAce,IAAKpB,IACvJ,wBAAQQ,UAAU,mBAAlB,yBADe,OACmD,yCAAG,uBAAOQ,KAAK,OAAOC,YAAY,aAAapB,MAAOC,EAAOoB,KAAK,OAAOV,UAAU,aAAaW,SAAUd,EAAce,IAAKpB,IAC/L,wBAAQQ,UAAU,cAAlB,sBADkE,U,eCsB/Da,MAvCf,YAA2D,IAA5CC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,aAAaC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,WACzC,EAAqB9B,mBACjB,CACIgB,GAAG,KACHd,MAAM,KAHd,mBAAOD,EAAP,KAAY8B,EAAZ,KAeA,OAAG9B,EAAKe,GACG,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SAThB,SAAAZ,GACb4B,EAAW7B,EAAKe,GAAGd,GACnB6B,EAAQ,CACJf,GAAG,KACHd,MAAM,QASPyB,EAAMK,KAAI,SAACC,EAAKC,GAAN,OAEb,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAsB,WAAxD,UAEI,qBAAmBC,QAAS,kBAAIR,EAAaK,EAAKjB,KAAlD,SACKiB,EAAKb,MADAa,EAAKjB,IAIf,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CAAmBuB,QAAS,kBAAIP,EAAWI,EAAKjB,KAAKH,UAAU,gBAC/D,cAAC,IAAD,CAAQuB,QAAS,kBAAIL,EAAQ,CAACf,GAAGiB,EAAKjB,GAAGd,MAAM+B,EAAKb,QAAQP,UAAU,mBARLqB,OCoBlEG,MA7Cf,WACI,MAAuBrC,mBAAS,IAAhC,mBAAO2B,EAAP,KAAaW,EAAb,KAmCA,OACI,gCACI,0CACA,cAAC,EAAD,CAAUxB,SApCH,SAAAmB,GACX,GAAIA,EAAKb,KAAT,CAGA,IAAMmB,EAAS,CAACN,GAAF,mBAAUN,IAExBW,EAASC,OA+BL,cAAC,EAAD,CAAMZ,MAAOA,EAAOa,aAbT,SAAAxB,GACf,IAAIyB,EAAad,EAAMK,KAAI,SAAAC,GAIvB,OAHGA,EAAKjB,IAAIA,IACRiB,EAAKS,YAAYT,EAAKS,YAEnBT,KAEXK,EAASG,IAM2CZ,WApBvC,SAAAb,GACb,IAAM2B,EAAU,YAAKhB,GAAOiB,QAAO,SAAAX,GAAI,OAAEA,EAAKjB,KAAOA,KAErDsB,EAASK,IAiBmEb,WA3B/D,SAACe,EAAOC,GACjBA,EAAS1B,MAGbkB,GAAS,SAAAS,GAAI,OAAEA,EAAKf,KAAI,SAAAgB,GAAI,OAAKA,EAAKhC,KAAK6B,EAASC,EAAWE,eCTxDC,MARf,WACE,OACE,qBAAKpC,UAAU,UAAf,SACE,cAAC,EAAD,OCHNqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6f1a6054.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef } from 'react';\n\nfunction Todoform(props) {\n    const [input, Setinput]=useState(props.edit ? props.edit.value : ''); //State variable input and callback function Setinput\n\n    const inputfocus=useRef(null)\n    useEffect(()=>{ inputfocus.current.focus()})\n    const handleChange= e => {\n        Setinput(e.target.value);\n    }\n    const handleSubmit= e =>{\n        e.preventDefault();\n\n        props.onSubmit({\n            id:Math.floor(Math.random()*10000),\n            text:input\n        });\n\n        Setinput('');\n    };\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            {props.edit ? (<> <input type=\"text\" placeholder=\"Update your todo\" value={input} name=\"text\" className=\"todo-input edit\" onChange={handleChange} ref={inputfocus}/>\n            <button className=\"todo-button edit\">Update Todo</button> </>) : (<> <input type=\"text\" placeholder=\"Add a todo\" value={input} name=\"text\" className=\"todo-input\" onChange={handleChange} ref={inputfocus}/>\n            <button className=\"todo-button\">Add Todo</button> </>) }\n             \n        </form>\n    )\n}\n\nexport default Todoform;\n","import { values } from 'lodash';\nimport React, {useState} from 'react';\nimport Todoform from './Todoform';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction Todo({todos,Completetodo,removetodo,updatetodo}) {\n    const [edit,setedit]=useState(\n        {\n            id:null,\n            value:\"\"\n        }\n    );\n\n    const submittodo=value=>{\n        updatetodo(edit.id,value)\n        setedit({\n            id:null,\n            value:''\n        })\n    }\n\n    if(edit.id){\n        return <Todoform edit={edit} onSubmit={submittodo} />\n    }\n\n\n    return todos.map((todo,index) =>(\n\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\n\n            <div key={todo.id} onClick={()=>Completetodo(todo.id)}>\n                {todo.text}\n            </div>\n\n            <div className=\"icons\">\n                <RiCloseCircleLine onClick={()=>removetodo(todo.id)} className='delete-icon'/>\n                <TiEdit onClick={()=>setedit({id:todo.id,value:todo.text})} className='edit-icon'/>\n           \n            </div> \n\n        </div>\n    ))\n}\n\nexport default Todo;\n","import React,{useState} from 'react';\nimport Todo from './Todo';\nimport Todoform from './Todoform';\n\nfunction Todolist() {\n    const [todos,setTodos]=useState([]);\n\n    const Addtodo= todo =>{  // to add a todo to the list \n        if(!todo.text){\n        return\n        }\n        const newtodos=[todo,...todos];\n\n        setTodos(newtodos);  //call back function to set todos state\n    }\n\n\n    const updatetodo=(todoid,newvalue) => {\n        if(!newvalue.text){\n            return\n            }\n        setTodos(prev=>prev.map(item => (item.id===todoid ? newvalue : item)))\n    }\n\n    const removetodo=id=>{\n        const removeArr=[... todos].filter(todo=>todo.id !== id);\n\n        setTodos(removeArr);\n    }\n    \n\n    const completetodo=id=>{\n        let updatedtodos=todos.map(todo=>{\n            if(todo.id==id){\n                todo.iscomplete=!todo.iscomplete;\n            }\n            return todo; \n        })\n        setTodos(updatedtodos);\n    }\n    return (\n        <div>\n            <h1>Todo App</h1>\n            <Todoform onSubmit={Addtodo} />\n            <Todo todos={todos} completetodo={completetodo} removetodo={removetodo} updatetodo={updatetodo} />\n        </div>\n    )\n}\n\nexport default Todolist;\n","\nimport './App.css';\nimport Todolist from './components/Todolist';\n\nfunction App() {\n  return (\n    <div className=\"TodoApp\">\n      <Todolist />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}